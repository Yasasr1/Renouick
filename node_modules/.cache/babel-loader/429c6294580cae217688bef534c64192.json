{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Thisara\\\\Documents\\\\renouick\\\\Renouick\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Thisara\\\\Documents\\\\renouick\\\\Renouick\\\\src\\\\components\\\\RegistrationPages\\\\CustomerRegistration\\\\CustomerRegistration.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport MyTextField from '../../UI/TextField/TextField';\nimport './CustomerRegistration.css';\nimport PasswordField from '../../UI/TextField/PasswordField';\nimport { TextField } from '@material-ui/core';\nimport validator from 'validator';\n\nclass CustomerRegistration extends Component {\n  constructor(...args) {\n    super(...args);\n    this.inputValues = {\n      firstName: {\n        value: '',\n        isValid: true,\n        message: ''\n      },\n      lastName: {\n        value: '',\n        isValid: true,\n        message: ''\n      },\n      birthday: {\n        value: '',\n        isValid: true,\n        message: ''\n      },\n      address: {\n        value: '',\n        isValid: true,\n        message: ''\n      },\n      email: {\n        value: '',\n        isValid: true,\n        message: ''\n      },\n      username: {\n        value: '',\n        isValid: true,\n        message: ''\n      },\n      password: {\n        value: '',\n        isValid: true,\n        message: ''\n      },\n      confirmPassword: {\n        value: '',\n        isValid: true,\n        message: ''\n      }\n    };\n    this.state = _objectSpread({}, this.inputValues);\n\n    this.inputHandler = event => {\n      const updatedState = _objectSpread({}, this.state, {\n        [event.target.id]: _objectSpread({}, this.state[event.target.id], {\n          value: event.target.value\n        })\n      });\n\n      this.setState(updatedState);\n    };\n\n    this.formValidationHandler = () => {\n      const copiedState = _objectSpread({}, this.state);\n\n      let isConfirmed = true;\n\n      if (!copiedState.firstName.value) {\n        copiedState.firstName.isValid = false;\n        copiedState.firstName.message = '*Required';\n        isConfirmed = false;\n      } else {\n        copiedState.firstName.isValid = true;\n        copiedState.firstName.message = '';\n      }\n\n      if (!copiedState.lastName.value) {\n        copiedState.lastName.isValid = false;\n        copiedState.lastName.message = '*Required';\n        isConfirmed = false;\n      } else {\n        copiedState.lastName.isValid = true;\n        copiedState.lastName.message = '';\n      }\n\n      if (!copiedState.address.value) {\n        copiedState.address.isValid = false;\n        copiedState.address.message = '*Required';\n        isConfirmed = false;\n      } else {\n        copiedState.address.isValid = true;\n        copiedState.address.message = '';\n      }\n\n      if (!copiedState.username.value) {\n        copiedState.username.isValid = false;\n        copiedState.username.message = '*Required';\n        isConfirmed = false;\n      } else {\n        copiedState.username.isValid = true;\n        copiedState.username.message = '';\n      }\n\n      if (!validator.isEmail(copiedState.email.value)) {\n        copiedState.email.isValid = false;\n        copiedState.email.message = 'Not a valid email address';\n        isConfirmed = false;\n      } else {\n        copiedState.email.isValid = true;\n        copiedState.email.message = '';\n      }\n\n      if (!copiedState.password.value) {\n        copiedState.password.isValid = false;\n        copiedState.password.message = '*Required';\n        isConfirmed = false;\n      } else {\n        copiedState.password.isValid = true;\n        copiedState.password.message = '';\n      }\n\n      if (copiedState.password.value !== copiedState.confirmPassword.value || !copiedState.confirmPassword.value) {\n        copiedState.confirmPassword.isValid = false;\n        copiedState.confirmPassword.message = 'Password do not match';\n        isConfirmed = false;\n      } else {\n        copiedState.confirmPassword.isValid = true;\n        copiedState.confirmPassword.message = '';\n      }\n\n      this.setState(copiedState);\n      return isConfirmed;\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n\n      if (this.formValidationHandler()) {// form processing here....\n      }\n    };\n\n    this.clearFormHandler = () => {\n      this.setState(_objectSpread({}, this.inputValues));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"CustomerRegistrationOuterDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CustomerRegistrationInnerDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-uppercase text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Registration\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(MyTextField, {\n      id: \"firstName\",\n      error: !this.state.firstName.isValid,\n      label: \"First Name\",\n      placeholder: \"Insert First Name\",\n      helperText: !this.state.firstName.isValid ? React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.state.firstName.message) : null,\n      changed: this.inputHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(MyTextField, {\n      error: !this.state.lastName.isValid,\n      id: \"lastName\",\n      label: \"Last Name\",\n      placeholder: \"Insert Last Name\",\n      helperText: !this.state.lastName.isValid ? React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.state.lastName.message) : null,\n      changed: this.inputHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"birthday\",\n      label: \"Birthday\",\n      type: \"date\",\n      defaultValue: \"2017-05-24\",\n      style: {\n        margin: 12,\n        width: '95%'\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: this.inputHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(MyTextField, {\n      error: !this.state.address.isValid,\n      id: \"address\",\n      label: \"Address\",\n      placeholder: \"Insert Address\",\n      helperText: !this.state.address.isValid ? React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.state.address.message) : null,\n      changed: this.inputHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(MyTextField, {\n      error: !this.state.email.isValid,\n      id: \"email\",\n      label: \"E-mail\",\n      placeholder: \"Insert Email\",\n      helperText: !this.state.email.isValid ? React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.state.email.message) : null,\n      changed: this.inputHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(MyTextField, {\n      error: !this.state.username.isValid,\n      id: \"username\",\n      label: \"Username\",\n      placeholder: \"Insert Username\",\n      helperText: !this.state.username.isValid ? React.createElement(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.state.username.message) : null,\n      changed: this.inputHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(PasswordField, {\n      error: !this.state.password.isValid,\n      id: \"password\",\n      label: \"Password\",\n      changed: this.inputHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(PasswordField, {\n      error: !this.state.confirmPassword.isValid,\n      id: \"confirmPassword\",\n      label: !this.state.confirmPassword.isValid ? \"Don't match\" : \"Confirm Password\",\n      changed: this.inputHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.submitHandler,\n      className: \"btn btn-block btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"button\", {\n      type: \"reset\",\n      onClick: this.clearFormHandler,\n      className: \"btn btn-block btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"p\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"have an account?\"), React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Sign in\"))));\n  }\n\n}\n\n;\nexport default CustomerRegistration;","map":{"version":3,"sources":["C:\\Users\\Thisara\\Documents\\renouick\\Renouick\\src\\components\\RegistrationPages\\CustomerRegistration\\CustomerRegistration.js"],"names":["React","Component","MyTextField","PasswordField","TextField","validator","CustomerRegistration","inputValues","firstName","value","isValid","message","lastName","birthday","address","email","username","password","confirmPassword","state","inputHandler","event","updatedState","target","id","setState","formValidationHandler","copiedState","isConfirmed","isEmail","submitHandler","preventDefault","clearFormHandler","render","color","margin","width","shrink"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\r\nimport MyTextField from '../../UI/TextField/TextField';\r\nimport './CustomerRegistration.css';\r\nimport PasswordField from '../../UI/TextField/PasswordField';\r\nimport {TextField} from '@material-ui/core';\r\nimport validator from 'validator';\r\n\r\n\r\nclass CustomerRegistration extends Component {\r\n    inputValues = {\r\n        \r\n            firstName: {value: '', isValid: true, message: ''},\r\n            lastName: {value: '', isValid: true, message: ''},\r\n            birthday: {value: '', isValid: true, message: ''},\r\n            address: {value: '', isValid: true, message: ''},\r\n            email: {value: '', isValid: true, message: ''},\r\n            username: {value: '', isValid: true, message: ''},\r\n            password: {value: '', isValid: true, message: ''},\r\n            confirmPassword: {value: '', isValid: true, message: ''}\r\n        \r\n    }\r\n\r\n    state = {...this.inputValues};\r\n\r\n    inputHandler = (event) => {\r\n        const updatedState = {\r\n            ...this.state,\r\n            [event.target.id]: {\r\n                ...this.state[event.target.id],\r\n                value: event.target.value,\r\n            }\r\n        };\r\n\r\n        this.setState(updatedState)\r\n    }\r\n\r\n    formValidationHandler = () => {\r\n        const copiedState = {...this.state};\r\n        let isConfirmed = true;\r\n\r\n        if(!copiedState.firstName.value){\r\n            copiedState.firstName.isValid = false;\r\n            copiedState.firstName.message = '*Required';\r\n            isConfirmed = false;\r\n        } else  {\r\n            copiedState.firstName.isValid = true;\r\n            copiedState.firstName.message = '';\r\n        }\r\n        if(!copiedState.lastName.value){\r\n            copiedState.lastName.isValid = false;\r\n            copiedState.lastName.message = '*Required';\r\n            isConfirmed = false;\r\n        } else  {\r\n            copiedState.lastName.isValid = true;\r\n            copiedState.lastName.message = '';\r\n        }\r\n\r\n        if(!copiedState.address.value){\r\n            copiedState.address.isValid = false;\r\n            copiedState.address.message = '*Required';\r\n            isConfirmed = false;\r\n        } else  {\r\n            copiedState.address.isValid = true;\r\n            copiedState.address.message = '';\r\n        }\r\n\r\n        if(!copiedState.username.value){\r\n            copiedState.username.isValid = false;\r\n            copiedState.username.message = '*Required';\r\n            isConfirmed = false;\r\n        } else  {\r\n            copiedState.username.isValid = true;\r\n            copiedState.username.message = '';\r\n        }\r\n        \r\n        if (!validator.isEmail(copiedState.email.value)) {\r\n            copiedState.email.isValid = false;\r\n            copiedState.email.message = 'Not a valid email address';\r\n            isConfirmed = false;\r\n        } else  {\r\n            copiedState.email.isValid = true;\r\n            copiedState.email.message = '';\r\n        }\r\n\r\n        if(!copiedState.password.value){\r\n            copiedState.password.isValid = false;\r\n            copiedState.password.message = '*Required';\r\n            isConfirmed = false;\r\n        } else  {\r\n            copiedState.password.isValid = true;\r\n            copiedState.password.message = '';\r\n        }\r\n\r\n        if(copiedState.password.value !== copiedState.confirmPassword.value || !copiedState.confirmPassword.value){\r\n            copiedState.confirmPassword.isValid = false;\r\n            copiedState.confirmPassword.message = 'Password do not match';\r\n            isConfirmed = false;\r\n        } else  {\r\n            copiedState.confirmPassword.isValid = true;\r\n            copiedState.confirmPassword.message = '';\r\n        }\r\n\r\n        this.setState(copiedState);\r\n        return isConfirmed;\r\n        \r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (this.formValidationHandler()) {\r\n          // form processing here....\r\n        }\r\n    }\r\n    clearFormHandler = () => {\r\n        this.setState({...this.inputValues});\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"CustomerRegistrationOuterDiv\">\r\n                <div className=\"CustomerRegistrationInnerDiv\">\r\n                    <h5 className=\"text-uppercase text-center\">Registration</h5>\r\n                <form>\r\n                    <MyTextField\r\n                    id=\"firstName\"\r\n                    error={!this.state.firstName.isValid}\r\n                    label=\"First Name\"\r\n                    placeholder=\"Insert First Name\"\r\n                    helperText={!this.state.firstName.isValid ? <p style={{color: 'red'}}>{this.state.firstName.message}</p> : null}\r\n                    changed={this.inputHandler}\r\n                    />\r\n\r\n                    <MyTextField\r\n                    error={!this.state.lastName.isValid}\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    placeholder=\"Insert Last Name\"\r\n                    helperText={!this.state.lastName.isValid ? <p style={{color: 'red'}}>{this.state.lastName.message}</p> : null}\r\n                    changed={this.inputHandler}\r\n                    />\r\n        \r\n                    <TextField\r\n                    id=\"birthday\"\r\n                    label=\"Birthday\"\r\n                    type=\"date\"\r\n                    defaultValue=\"2017-05-24\"\r\n                    style={{ margin: 12, width: '95%' }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    onChange={this.inputHandler}\r\n                    />\r\n                     \r\n\r\n                    <MyTextField\r\n                    error={!this.state.address.isValid}\r\n                    id=\"address\"\r\n                    label=\"Address\"\r\n                    placeholder=\"Insert Address\"\r\n                    helperText={!this.state.address.isValid ? <p style={{color: 'red'}}>{this.state.address.message}</p> : null}\r\n                    changed={this.inputHandler}\r\n                    />\r\n\r\n                    <MyTextField\r\n                    error={!this.state.email.isValid}\r\n                    id=\"email\"\r\n                    label=\"E-mail\"\r\n                    placeholder=\"Insert Email\"\r\n                    helperText={!this.state.email.isValid ? <p style={{color: 'red'}}>{this.state.email.message}</p> : null}\r\n                    changed={this.inputHandler}\r\n                    />\r\n\r\n                    <MyTextField\r\n                    error={!this.state.username.isValid}\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    placeholder=\"Insert Username\"\r\n                    helperText={!this.state.username.isValid ? <p style={{color: 'red'}}>{this.state.username.message}</p> : null}\r\n                    changed={this.inputHandler}\r\n                    />\r\n\r\n                    <PasswordField\r\n                    error={!this.state.password.isValid}\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    changed={this.inputHandler}\r\n                    />\r\n\r\n                    <PasswordField\r\n                    error={!this.state.confirmPassword.isValid}\r\n                    id=\"confirmPassword\"\r\n                    label={!this.state.confirmPassword.isValid ?  \"Don't match\" : \"Confirm Password\"}\r\n                    changed={this.inputHandler}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <button onClick={this.submitHandler} className=\"btn btn-block btn-primary\">Register</button>\r\n                    <button type=\"reset\" onClick={this.clearFormHandler} className=\"btn btn-block btn-danger\">Clear</button>\r\n                    <p className=\"text-muted\">have an account?</p>\r\n                    <a href=\"/\">Sign in</a>\r\n\r\n\r\n                </form>\r\n            </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n};\r\n\r\nexport default CustomerRegistration;"]},"metadata":{},"sourceType":"module"}